name: Deployment Workflow

on:
  #workflow_run:
  #  workflows: ["Create and publish a Docker image"]
  #  types:
  #    - completed
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  check_previous_workflow:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      should_run: ${{ steps.check_run.conclusion == 'success' }}

    steps:
      - name: Check if previous workflow was successful
        id: check_run
        run: echo "Previous workflow was successful, proceeding to deployment."

  setup-environment:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Environment
      run: |
        echo "Output from build stage"
        echo ${{ secrets.USERNAME }}
        echo "Exporting environment variables from build.env"
        export $(cat build.env | xargs)
        echo "BUILD_VERSION=${{ env.BUILD_VERSION }}"
        echo "Registry = ${{ env.REGISTRY }}"
        echo "Image_name= ${{ env.IMAGE_NAME }}"
        echo "github_actor = ${{ github.actor }}"

    - name: Install Dependencies
      run: |
        apt-get update && apt-get install -y git curl bash coreutils
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
        mv kustomize /usr/local/bin/

  update-manifest:
    name: "Update Manifests"
    needs: "build-and-push"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Git checkout"
        uses: "actions/checkout@v2"
        with:
          token: ${{ secrets.ACTIONS_SYSTEM_USER }} # [2]

      - name: "Update Deployment Image Tag" # [3]
        working-directory: "deployment"
        run: |
          kustomize edit set image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cat kustomization.yaml

      - name: "Push Updated Image Tag" # [4]
        run: |
          git config --global user.name "@CMarquetand-bot"
          git config --global user.email "CMarquetand-bot@users.noreply.github.com"
          git commit -am "feat: Update deployment image tag to ${{ github.sha }} [skip ci]"
          git push
